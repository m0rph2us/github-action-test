name: Test with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-with-gradle:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        path: self
    - name: Checkout docker environment repository
      uses: actions/checkout@v2
      with:
        repository: 'm0rph2us/docker-mysql'
        path: 'docker-mysql'
    - name: Checkout proper branch for push event
      if: ${{ github.event_name == 'push' }}
      run: echo $GITHUB_REF && git checkout ${GITHUB_REF##*/}
      working-directory: 'docker-mysql'
    - name: Checkout proper branch for PR event
      if: ${{ github.event_name == 'pull_request' }}
      run: |
        if [[ ${GITHUB_HEAD_REF##*/} != docker-* ]]; then exit 0; fi;
        echo ${GITHUB_HEAD_REF##*/} && echo ${GITHUB_BASE_REF##*/} 
        DOCKER_BRANCH_NAME=$(echo ${GITHUB_HEAD_REF##*/} | cut -c 8-)
        DOCKER_BRANCH=$(echo $GITHUB_HEAD_REF | cut -d'/' -f1)/$DOCKER_BRANCH_NAME
        if [[ $DOCKER_BRANCH_NAME =~ develop|stage|main|master ]];
        then
          git checkout $DOCKER_BRANCH_NAME;
        else 
          echo $DOCKER_BRANCH
          git fetch 
          git branch -a 
          git checkout $DOCKER_BRANCH
          if [[ ${GITHUB_BASE_REF##*/} == 'main' ]]; 
          then git merge main || git merge master; 
          else git merge ${GITHUB_BASE_REF##*/}; 
          fi;
        fi;
      working-directory: 'docker-mysql'
    - name: Run MySQL container
      run: |
        if [[ ${GITHUB_HEAD_REF##*/} != docker-* ]]; then exit 0; fi;
        docker-compose up -d
      working-directory: 'docker-mysql'
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      working-directory: self
    - name: Test with Gradle
      run: ./gradlew :test
      working-directory: self
